@import './variables';
@import './utilities';

@mixin clickable-card($start: 2, $end: 4, $scale: 1.05) {
  --scale: 1;
  @include elevation($start);
  @include animate((box-shadow, transform));
  cursor: pointer;
  z-index: 1;
  transform: scale(var(--scale));
  transform-origin: 50% 50%;

  &:hover,
  &:focus {
    --scale: #{$scale};
    @include elevation($end);
    z-index: 2;
  }

  &:active {
    --scale: 1;
    @include elevation($start);
    outline: none;
  }
}

// Add this mixin to a parent element (e.g. Card), 
// and pass in the text selector you want to animate (e.g. '.title') 
@mixin animate-text-underline($selector, $color: var(--color-green)) {
  &:hover {
    #{$selector}::before {
      width: 100%;
    }
  }

  #{$selector} {
    position: relative;

    &::before { // for the animated underline
      @include animate(width);
      position: absolute;
      bottom: 0;
      z-index: -1;
      width: 0%;
      height: 4px;
      content: '';
      background-color: $color;
    }
  }

}

@mixin animate-background-color($fromColor, $fromOpacity, $toColor, $toOpacity) {
  position: relative;

  &::after {
    @include animate((background-color, opacity));

    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 0;
    content: '';
    background-color: $fromColor;
    border-radius: inherit;
    opacity: $fromOpacity;
  }

  &:hover {
    &::after {
      background-color: $toColor;
      opacity: $toOpacity;
    }
  }
}

@function brandColor($brand, $light: false) {
  @if $light == true {
    @return var(--color-#{$brand}-light);
  } @else {
    @return var(--color-#{$brand});
  }
}

// @mixin perspectiveCard($perspective: 1000) {
//   perspective: #{$perspective}px;
//   transform: 
//     rotateX(var(--rotate-x, 0)) 
//     rotateY(var(--rotate-y, 0));
//   transform-style: preserve-3d;
// }
