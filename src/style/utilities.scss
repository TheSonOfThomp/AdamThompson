@import './variables.scss';

@function Min($a, $b) {
  @return #{'min(#{$a}, #{$b})'};
}

@function Max($a, $b) {
  @return #{'max(#{$a}, #{$b})'};
}

@function vh($vh) {
  @return calc(#{$vh} * var(--vh));
}

@mixin elevation($level) {
  $y: #{$level}px;
  $blur: #{$level * 3}px;
  box-shadow: 0 $y $blur rgba(0, 0, 0, 0.25);

}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if ($inset) {
    box-shadow: inset $top $left $blur $color;
  }
  @else {
    box-shadow: $top $left $blur $color;
  }
}

@mixin verticalGradient($topColor, $bottomColor, $endPct) {
  background: $topColor; /* Old browsers */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $topColor), color-stop($endPct, $bottomColor)); /* Chrome,Safari4+ */
  background: linear-gradient(to bottom, $topColor 0%, $bottomColor $endPct); /* W3C */
}

@mixin angledGradient($startCorner, $endCorner, $startColor, $endColor, $endPct) {
  background: $endColor; /* Old browsers */
  background: -webkit-gradient(linear, $startCorner, $endCorner, color-stop(0%, $startColor), color-stop($endPct, $endColor)); /* Chrome,Safari4+ */
  background: linear-gradient(to #{$endCorner}, #{$startColor} 0%, #{$endColor} #{$endPct}); /* W3C */
}

@mixin radialGradient($from, $to) {
  background: $to;
  background: -webkit-gradient(radial, center center, 0, center center, 100%, color-stop(0%, $from), color-stop(100%, $to));
  background: radial-gradient(circle, $from 0%, $to 100%);
}

@mixin CornerToCornerGradient($startColor, $endColor) {
  @include angledGradient(top left, bottom right, $startColor, $endColor, 100%);
}

@mixin border-radius($radius) {
  border-radius: $radius;
}

@mixin animate($what: all, $when: $animation-duration, $how: $animation-ease) {
  transition: $what $when $how;
}

@mixin responsiveText($min-size, $max-size, $unit: 'px') {
  font-size: responsiveSize($min-size, $max-size);
}

@function responsiveSize($min-size, $max-size, $unit: 'px') {
  $mobile-width: 320;
  // @return clamp(calc($min-size * 1 * #{$unit}), $min-size/$mobile-width*100vw, $max-size*1#{$unit});
  @return clamp(calc($min-size*1px), $min-size/$mobile-width*100vw, $max-size*1px);
}

$global-margin: responsiveSize(16, 24);